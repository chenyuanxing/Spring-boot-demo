<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Member">
    <id column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="member_type" jdbcType="VARCHAR" property="memberType" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="profile_dir" jdbcType="VARCHAR" property="profileDir" />
    <result column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="consultant_id" jdbcType="BIGINT" property="consultantId" />
    <result column="period_phase" jdbcType="VARCHAR" property="periodPhase" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="register_time" jdbcType="DATE" property="registerTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="birth_time" jdbcType="DATE" property="birthTime" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="height" jdbcType="VARCHAR" property="height" />
    <result column="weight" jdbcType="VARCHAR" property="weight" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="from_where" jdbcType="VARCHAR" property="fromWhere" />
    <result column="period_phase_date" jdbcType="DATE" property="periodPhaseDate" />
    <result column="is_postpone" jdbcType="VARCHAR" property="isPostpone" />
    <result column="is_problem" jdbcType="VARCHAR" property="isProblem" />
    <result column="postpone_days" jdbcType="INTEGER" property="postponeDays" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    member_id, member_type, member_name, gender, age, profile_dir, doctor_id, consultant_id, 
    period_phase, `status`, register_time, update_time, birth_time, occupation, height, 
    weight, user_id, from_where, period_phase_date, is_postpone, is_problem, postpone_days
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Member">
    insert into member (member_id, member_type, member_name, 
      gender, age, profile_dir, 
      doctor_id, consultant_id, period_phase, 
      `status`, register_time, update_time, 
      birth_time, occupation, height, 
      weight, user_id, from_where, 
      period_phase_date, is_postpone, is_problem, 
      postpone_days)
    values (#{memberId,jdbcType=BIGINT}, #{memberType,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}, #{profileDir,jdbcType=VARCHAR}, 
      #{doctorId,jdbcType=BIGINT}, #{consultantId,jdbcType=BIGINT}, #{periodPhase,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{registerTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{birthTime,jdbcType=DATE}, #{occupation,jdbcType=VARCHAR}, #{height,jdbcType=VARCHAR}, 
      #{weight,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{fromWhere,jdbcType=VARCHAR}, 
      #{periodPhaseDate,jdbcType=DATE}, #{isPostpone,jdbcType=VARCHAR}, #{isProblem,jdbcType=VARCHAR}, 
      #{postponeDays,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberType != null">
        member_type,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="profileDir != null">
        profile_dir,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="consultantId != null">
        consultant_id,
      </if>
      <if test="periodPhase != null">
        period_phase,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="birthTime != null">
        birth_time,
      </if>
      <if test="occupation != null">
        occupation,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fromWhere != null">
        from_where,
      </if>
      <if test="periodPhaseDate != null">
        period_phase_date,
      </if>
      <if test="isPostpone != null">
        is_postpone,
      </if>
      <if test="isProblem != null">
        is_problem,
      </if>
      <if test="postponeDays != null">
        postpone_days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberType != null">
        #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=TINYINT},
      </if>
      <if test="profileDir != null">
        #{profileDir,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="consultantId != null">
        #{consultantId,jdbcType=BIGINT},
      </if>
      <if test="periodPhase != null">
        #{periodPhase,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="birthTime != null">
        #{birthTime,jdbcType=DATE},
      </if>
      <if test="occupation != null">
        #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="fromWhere != null">
        #{fromWhere,jdbcType=VARCHAR},
      </if>
      <if test="periodPhaseDate != null">
        #{periodPhaseDate,jdbcType=DATE},
      </if>
      <if test="isPostpone != null">
        #{isPostpone,jdbcType=VARCHAR},
      </if>
      <if test="isProblem != null">
        #{isProblem,jdbcType=VARCHAR},
      </if>
      <if test="postponeDays != null">
        #{postponeDays,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.memberType != null">
        member_type = #{record.memberType,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.profileDir != null">
        profile_dir = #{record.profileDir,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=BIGINT},
      </if>
      <if test="record.consultantId != null">
        consultant_id = #{record.consultantId,jdbcType=BIGINT},
      </if>
      <if test="record.periodPhase != null">
        period_phase = #{record.periodPhase,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.birthTime != null">
        birth_time = #{record.birthTime,jdbcType=DATE},
      </if>
      <if test="record.occupation != null">
        occupation = #{record.occupation,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.fromWhere != null">
        from_where = #{record.fromWhere,jdbcType=VARCHAR},
      </if>
      <if test="record.periodPhaseDate != null">
        period_phase_date = #{record.periodPhaseDate,jdbcType=DATE},
      </if>
      <if test="record.isPostpone != null">
        is_postpone = #{record.isPostpone,jdbcType=VARCHAR},
      </if>
      <if test="record.isProblem != null">
        is_problem = #{record.isProblem,jdbcType=VARCHAR},
      </if>
      <if test="record.postponeDays != null">
        postpone_days = #{record.postponeDays,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set member_id = #{record.memberId,jdbcType=BIGINT},
      member_type = #{record.memberType,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=TINYINT},
      profile_dir = #{record.profileDir,jdbcType=VARCHAR},
      doctor_id = #{record.doctorId,jdbcType=BIGINT},
      consultant_id = #{record.consultantId,jdbcType=BIGINT},
      period_phase = #{record.periodPhase,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=DATE},
      update_time = #{record.updateTime,jdbcType=DATE},
      birth_time = #{record.birthTime,jdbcType=DATE},
      occupation = #{record.occupation,jdbcType=VARCHAR},
      height = #{record.height,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      from_where = #{record.fromWhere,jdbcType=VARCHAR},
      period_phase_date = #{record.periodPhaseDate,jdbcType=DATE},
      is_postpone = #{record.isPostpone,jdbcType=VARCHAR},
      is_problem = #{record.isProblem,jdbcType=VARCHAR},
      postpone_days = #{record.postponeDays,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Member">
    update member
    <set>
      <if test="memberType != null">
        member_type = #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="profileDir != null">
        profile_dir = #{profileDir,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="consultantId != null">
        consultant_id = #{consultantId,jdbcType=BIGINT},
      </if>
      <if test="periodPhase != null">
        period_phase = #{periodPhase,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="birthTime != null">
        birth_time = #{birthTime,jdbcType=DATE},
      </if>
      <if test="occupation != null">
        occupation = #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="fromWhere != null">
        from_where = #{fromWhere,jdbcType=VARCHAR},
      </if>
      <if test="periodPhaseDate != null">
        period_phase_date = #{periodPhaseDate,jdbcType=DATE},
      </if>
      <if test="isPostpone != null">
        is_postpone = #{isPostpone,jdbcType=VARCHAR},
      </if>
      <if test="isProblem != null">
        is_problem = #{isProblem,jdbcType=VARCHAR},
      </if>
      <if test="postponeDays != null">
        postpone_days = #{postponeDays,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Member">
    update member
    set member_type = #{memberType,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      profile_dir = #{profileDir,jdbcType=VARCHAR},
      doctor_id = #{doctorId,jdbcType=BIGINT},
      consultant_id = #{consultantId,jdbcType=BIGINT},
      period_phase = #{periodPhase,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      birth_time = #{birthTime,jdbcType=DATE},
      occupation = #{occupation,jdbcType=VARCHAR},
      height = #{height,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      from_where = #{fromWhere,jdbcType=VARCHAR},
      period_phase_date = #{periodPhaseDate,jdbcType=DATE},
      is_postpone = #{isPostpone,jdbcType=VARCHAR},
      is_problem = #{isProblem,jdbcType=VARCHAR},
      postpone_days = #{postponeDays,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
</mapper>